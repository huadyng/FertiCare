//K·∫øt n·ªëi URL c·ªßa Backend
import axios from "axios";
const axiosClient = axios.create({
  //"http://localhost:8080" -- http://localhost:3001

  baseURL: "http://localhost:8080", //URL c·ªßa backend
  headers: { "Content-Type": "application/json" },
  timeout: 10000, //t·ªëi thi·ªÉu 10s
});

axiosClient.interceptors.request.use((config) => {
  const storedUser = localStorage.getItem("user");
  if (storedUser) {
    try {
      const userData = JSON.parse(storedUser);
      if (userData.token) {
        config.headers.Authorization = `Bearer ${userData.token}`;
        console.log("üîç [axiosClient] Sending request to:", config.url);
        console.log(
          "üîç [axiosClient] Authorization header:",
          config.headers.Authorization ? "SET" : "MISSING"
        );
      } else {
        console.warn("‚ö†Ô∏è [axiosClient] No token found in user data");
      }
    } catch (e) {
      console.warn("‚ö†Ô∏è [axiosClient] User data kh√¥ng h·ª£p l·ªá:", e);
    }
  } else {
    console.warn("‚ö†Ô∏è [axiosClient] No user data in localStorage");
  }
  return config;
});

// Response interceptor ƒë·ªÉ x·ª≠ l√Ω l·ªói
axiosClient.interceptors.response.use(
  (response) => {
    return response;
  },
  (error) => {
    console.error("‚ùå [axiosClient] API Error:", {
      status: error.response?.status,
      statusText: error.response?.statusText,
      url: error.config?.url,
      method: error.config?.method,
      data: error.response?.data,
    });

    // X·ª≠ l√Ω l·ªói 403 - Forbidden (c√≥ th·ªÉ do token h·∫øt h·∫°n)
    if (error.response?.status === 403) {
      console.warn("‚ö†Ô∏è [axiosClient] 403 Forbidden - Token c√≥ th·ªÉ h·∫øt h·∫°n");
      // C√≥ th·ªÉ redirect v·ªÅ login ho·∫∑c refresh token
    }

    // X·ª≠ l√Ω l·ªói 500 - Internal Server Error
    if (error.response?.status === 500) {
      console.error(
        "üí• [axiosClient] 500 Internal Server Error - Backend c√≥ v·∫•n ƒë·ªÅ"
      );
    }

    // X·ª≠ l√Ω l·ªói 401 - Unauthorized
    if (error.response?.status === 401) {
      console.warn("‚ö†Ô∏è [axiosClient] 401 Unauthorized - Token kh√¥ng h·ª£p l·ªá");
      // C√≥ th·ªÉ redirect v·ªÅ login
    }

    return Promise.reject(error);
  }
);

export default axiosClient;
