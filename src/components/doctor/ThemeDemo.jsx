import React from "react";
import {
  Card,
  Button,
  Typography,
  Space,
  Row,
  Col,
  Progress,
  Tag,
  Alert,
  Statistic,
  Avatar,
  Timeline,
  Steps,
  Badge,
  Table,
  Descriptions,
} from "antd";
import {
  UserOutlined,
  HeartOutlined,
  CalendarOutlined,
  MedicineBoxOutlined,
  CheckCircleOutlined,
  StarOutlined,
  TeamOutlined,
  TrophyOutlined,
} from "@ant-design/icons";
import "./DoctorTheme.css";

const { Title, Text } = Typography;

const ThemeDemo = () => {
  const statisticsData = [
    {
      title: "T·ªïng b·ªánh nh√¢n",
      value: 245,
      icon: <TeamOutlined />,
      color: "var(--primary-color)",
    },
    {
      title: "L·ªãch h·∫πn h√¥m nay",
      value: 8,
      icon: <CalendarOutlined />,
      color: "var(--accent-color)",
    },
    {
      title: "ƒêang ƒëi·ªÅu tr·ªã",
      value: 12,
      icon: <MedicineBoxOutlined />,
      color: "var(--primary-light)",
    },
    {
      title: "T·ª∑ l·ªá th√†nh c√¥ng",
      value: 87,
      suffix: "%",
      icon: <TrophyOutlined />,
      color: "var(--primary-dark)",
    },
  ];

  const timelineData = [
    {
      color: "var(--primary-color)",
      children: (
        <div>
          <Text strong>Kh√°m l√¢m s√†ng ho√†n th√†nh</Text>
          <br />
          <Text type="secondary">09:30 - B·ªánh nh√¢n Nguy·ªÖn Th·ªã Mai</Text>
        </div>
      ),
    },
    {
      color: "var(--accent-color)",
      children: (
        <div>
          <Text strong>L·∫≠p ph√°c ƒë·ªì IVF</Text>
          <br />
          <Text type="secondary">10:15 - ƒê√£ t√πy ch·ªânh theo t√¨nh tr·∫°ng</Text>
        </div>
      ),
    },
    {
      color: "var(--primary-light)",
      children: (
        <div>
          <Text strong>L√™n l·ªãch ƒëi·ªÅu tr·ªã</Text>
          <br />
          <Text type="secondary">10:45 - 12 bu·ªïi trong 3 tu·∫ßn</Text>
        </div>
      ),
    },
  ];

  const tableData = [
    {
      key: "1",
      patient: "Nguy·ªÖn Th·ªã Mai",
      age: 32,
      service: "IVF",
      status: "ƒêang ƒëi·ªÅu tr·ªã",
      progress: 60,
    },
    {
      key: "2",
      patient: "Tr·∫ßn VƒÉn Nam",
      age: 35,
      service: "IUI",
      status: "Ho√†n th√†nh",
      progress: 100,
    },
    {
      key: "3",
      patient: "L√™ Th·ªã Hoa",
      age: 28,
      service: "IVF",
      status: "T∆∞ v·∫•n",
      progress: 25,
    },
  ];

  const tableColumns = [
    {
      title: "B·ªánh nh√¢n",
      dataIndex: "patient",
      key: "patient",
      render: (text) => (
        <Space>
          <Avatar icon={<UserOutlined />} className="doctor-avatar" />
          <Text strong>{text}</Text>
        </Space>
      ),
    },
    {
      title: "Tu·ªïi",
      dataIndex: "age",
      key: "age",
    },
    {
      title: "D·ªãch v·ª•",
      dataIndex: "service",
      key: "service",
      render: (service) => (
        <Tag
          className={
            service === "IVF" ? "doctor-tag-primary" : "doctor-tag-secondary"
          }
        >
          {service}
        </Tag>
      ),
    },
    {
      title: "Tr·∫°ng th√°i",
      dataIndex: "status",
      key: "status",
      render: (status) => (
        <Tag
          className={
            status === "Ho√†n th√†nh"
              ? "doctor-tag-primary"
              : "doctor-tag-secondary"
          }
        >
          {status}
        </Tag>
      ),
    },
    {
      title: "Ti·∫øn ƒë·ªô",
      dataIndex: "progress",
      key: "progress",
      render: (progress) => (
        <Progress percent={progress} className="doctor-progress" />
      ),
    },
  ];

  return (
    <div
      className="doctor-dashboard"
      style={{ padding: "24px", minHeight: "100vh" }}
    >
      {/* Header */}
      <Card className="doctor-card doctor-fade-in" style={{ marginBottom: 24 }}>
        <div className="doctor-header">
          <Title level={2} style={{ color: "var(--text-white)", margin: 0 }}>
            <HeartOutlined style={{ marginRight: 12 }} />
            Demo Giao Di·ªán M·ªõi - Doctor Dashboard
          </Title>
        </div>

        <div style={{ padding: "24px" }}>
          <Alert
            message="üé® Giao di·ªán m·ªõi ƒë√£ ƒë∆∞·ª£c √°p d·ª•ng!"
            description="Theme gradient h·ªìng v·ªõi hi·ªáu ·ª©ng glass morphism v√† animations m∆∞·ª£t m√†."
            type="info"
            showIcon
            className="doctor-alert-info"
            style={{ marginBottom: 24 }}
          />

          {/* Statistics Cards */}
          <Title
            level={4}
            style={{ color: "var(--primary-color)", marginBottom: 16 }}
          >
            üìä Th·ªëng k√™ t·ªïng quan
          </Title>
          <Row gutter={[16, 16]} style={{ marginBottom: 32 }}>
            {statisticsData.map((stat, index) => (
              <Col span={6} key={index}>
                <Card
                  className="doctor-stat-card doctor-fade-in"
                  style={{ animationDelay: `${index * 0.1}s` }}
                >
                  <Statistic
                    title={stat.title}
                    value={stat.value}
                    suffix={stat.suffix}
                    prefix={React.cloneElement(stat.icon, {
                      style: { color: stat.color },
                    })}
                    valueStyle={{ color: stat.color, fontWeight: 600 }}
                  />
                </Card>
              </Col>
            ))}
          </Row>

          {/* Buttons Demo */}
          <Title
            level={4}
            style={{ color: "var(--primary-color)", marginBottom: 16 }}
          >
            üéØ Buttons & Controls
          </Title>
          <Card className="doctor-glass-card" style={{ marginBottom: 24 }}>
            <Space wrap>
              <Button
                type="primary"
                size="large"
                className="doctor-btn-primary"
              >
                <CheckCircleOutlined /> Button Primary
              </Button>
              <Button size="large" className="doctor-btn-secondary">
                <UserOutlined /> Button Secondary
              </Button>
              <Button type="primary" ghost className="doctor-btn-secondary">
                Ghost Button
              </Button>
              <Button danger>Danger Button</Button>
            </Space>
          </Card>

          {/* Progress & Tags Demo */}
          <Row gutter={24} style={{ marginBottom: 24 }}>
            <Col span={12}>
              <Card className="doctor-glass-card">
                <Title level={5} style={{ color: "var(--primary-color)" }}>
                  üìà Progress Bars
                </Title>
                <Space direction="vertical" style={{ width: "100%" }}>
                  <div>
                    <Text>Ti·∫øn ƒë·ªô ƒëi·ªÅu tr·ªã</Text>
                    <Progress percent={75} className="doctor-progress" />
                  </div>
                  <div>
                    <Text>Hi·ªáu qu·∫£</Text>
                    <Progress
                      percent={88}
                      status="active"
                      className="doctor-progress"
                    />
                  </div>
                  <div>
                    <Text>Ho√†n th√†nh</Text>
                    <Progress percent={100} className="doctor-progress" />
                  </div>
                </Space>
              </Card>
            </Col>
            <Col span={12}>
              <Card className="doctor-glass-card">
                <Title level={5} style={{ color: "var(--primary-color)" }}>
                  üè∑Ô∏è Tags & Badges
                </Title>
                <Space wrap>
                  <Tag className="doctor-tag-primary">IVF</Tag>
                  <Tag className="doctor-tag-primary">Ho√†n th√†nh</Tag>
                  <Tag className="doctor-tag-secondary">IUI</Tag>
                  <Tag className="doctor-tag-secondary">ƒêang ƒëi·ªÅu tr·ªã</Tag>
                  <Badge count={5} className="doctor-badge">
                    <Avatar icon={<UserOutlined />} className="doctor-avatar" />
                  </Badge>
                </Space>
              </Card>
            </Col>
          </Row>

          {/* Timeline Demo */}
          <Row gutter={24} style={{ marginBottom: 24 }}>
            <Col span={12}>
              <Card className="doctor-card">
                <Title level={5} style={{ color: "var(--primary-color)" }}>
                  ‚è∞ Timeline - Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y
                </Title>
                <Timeline className="doctor-timeline" items={timelineData} />
              </Card>
            </Col>
            <Col span={12}>
              <Card className="doctor-card">
                <Title level={5} style={{ color: "var(--primary-color)" }}>
                  üìã Steps - Quy tr√¨nh ƒëi·ªÅu tr·ªã
                </Title>
                <Steps
                  direction="vertical"
                  size="small"
                  current={1}
                  className="doctor-steps"
                  items={[
                    {
                      title: "Kh√°m l√¢m s√†ng",
                      description: "Ho√†n th√†nh",
                      icon: <CheckCircleOutlined />,
                    },
                    {
                      title: "L·∫≠p ph√°c ƒë·ªì",
                      description: "ƒêang th·ª±c hi·ªán",
                      icon: <MedicineBoxOutlined />,
                    },
                    {
                      title: "ƒêi·ªÅu tr·ªã",
                      description: "Ch·ªù th·ª±c hi·ªán",
                      icon: <CalendarOutlined />,
                    },
                  ]}
                />
              </Card>
            </Col>
          </Row>

          {/* Table Demo */}
          <Card className="doctor-card">
            <Title
              level={4}
              style={{ color: "var(--primary-color)", marginBottom: 16 }}
            >
              üë• Danh s√°ch b·ªánh nh√¢n
            </Title>
            <Table
              columns={tableColumns}
              dataSource={tableData}
              pagination={false}
              className="doctor-table"
            />
          </Card>

          {/* Patient Info Demo */}
          <Card className="doctor-glass-card" style={{ marginTop: 24 }}>
            <Title
              level={4}
              style={{ color: "var(--primary-color)", marginBottom: 16 }}
            >
              üìù Th√¥ng tin chi ti·∫øt b·ªánh nh√¢n
            </Title>
            <Descriptions variant="bordered" column={3} size="small">
              <Descriptions.Item label="H·ªç t√™n">
                Nguy·ªÖn Th·ªã Mai
              </Descriptions.Item>
              <Descriptions.Item label="Tu·ªïi">32</Descriptions.Item>
              <Descriptions.Item label="Gi·ªõi t√≠nh">N·ªØ</Descriptions.Item>
              <Descriptions.Item label="D·ªãch v·ª•">
                <Tag className="doctor-tag-primary">IVF</Tag>
              </Descriptions.Item>
              <Descriptions.Item label="B√°c sƒ©">
                BS. L√™ VƒÉn Doctor
              </Descriptions.Item>
              <Descriptions.Item label="Tr·∫°ng th√°i">
                <Badge status="processing" text="ƒêang ƒëi·ªÅu tr·ªã" />
              </Descriptions.Item>
              <Descriptions.Item label="Ch·∫©n ƒëo√°n" span={3}>
                V√¥ sinh nguy√™n ph√°t, khuy·∫øn ngh·ªã ƒëi·ªÅu tr·ªã IVF v·ªõi ph√°c ƒë·ªì c√°
                nh√¢n h√≥a
              </Descriptions.Item>
            </Descriptions>
          </Card>

          {/* Action Buttons */}
          <div style={{ textAlign: "center", marginTop: 32 }}>
            <Space size="large">
              <Button
                type="primary"
                size="large"
                className="doctor-btn-primary"
                icon={<StarOutlined />}
              >
                √Åp d·ª•ng Theme M·ªõi
              </Button>
              <Button
                size="large"
                className="doctor-btn-secondary"
                icon={<HeartOutlined />}
              >
                Xem Demo Kh√°c
              </Button>
            </Space>
          </div>
        </div>
      </Card>
    </div>
  );
};

export default ThemeDemo;
